name: Build Docker Image, Generate SBOM, Run Semgrep and Gitleaks

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-sbom:
    runs-on: ubuntu-latest

    steps:
      # 1. Reposunu çek
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Docker için Buildx ortamını kur
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Docker image'ı sadece build et (push yapmadan)
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: juice-shop:latest

      # 4. Syft'ı kur
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      # 5. SBOM dosyasını oluştur
      - name: Generate SBOM with Syft
        run: |
          syft juice-shop:latest -o spdx-json > sbom.spdx.json

      # 6. SBOM dosyasını artefakt olarak kaydet
      - name: Upload SBOM as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: juice-shop-sbom
          path: sbom.spdx.json

  semgrep-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: |
          curl -sSfL https://semgrep.dev/install.sh | sh

      - name: Run Semgrep scan and output SARIF (strict)
        run: |
          semgrep --config=auto --sarif --strict --output=semgrep-results.sarif

      - name: Upload Semgrep SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-results
          path: semgrep-results.sarif

  gitleaks-scan:
    runs-on: ubuntu-latest
    needs: build-and-sbom  # Önce build işini bekle!

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Gitleaks scan and output SARIF
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --report-format sarif --report-path gitleaks-results.sarif

      - name: Clean Gitleaks SARIF (optional but safe)
        run: |
          jq 'del(.runs[].results[].properties)' gitleaks-results.sarif > cleaned-gitleaks-results.sarif
          mv cleaned-gitleaks-results.sarif gitleaks-results.sarif

      - name: Upload Gitleaks SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif-results
          path: gitleaks-results.sarif
